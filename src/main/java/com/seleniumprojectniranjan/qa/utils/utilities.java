package com.seleniumprojectniranjan.qa.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.time.LocalDateTime;

import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.io.FileHandler;

public class utilities {

	public static final int IMPLICIT_WAIT_TIME = 10;
	public static final int PAGE_WAIT_TIME = 15;

	public static Object[][] getTestDataFromExcel(String sheetname) {

		File excelFile = new File(System.getProperty("user.dir")
				+ "\\src\\main\\java\\com\\seleniumprojectniranjan\\qa\\testdata\\Automation_testdata.xlsx");
		XSSFWorkbook workbook = null;
		try {
			FileInputStream fisExcel = new FileInputStream(excelFile);
			workbook = new XSSFWorkbook(fisExcel);
		} catch (Throwable e) {
			e.printStackTrace();
		}

		XSSFSheet sheet = workbook.getSheet(sheetname);

		int rows = sheet.getLastRowNum();
		int cols = sheet.getRow(0).getLastCellNum();

		Object[][] data = new Object[rows][cols];

		for (int i = 0; i < rows; i++) {

			XSSFRow row = sheet.getRow(i + 1);

			for (int j = 0; j < cols; j++) {

				XSSFCell cell = row.getCell(j);
				CellType cellType = cell.getCellType();

				switch (cellType) {

				case STRING:
					data[i][j] = cell.getStringCellValue();
					break;
				case NUMERIC:
					data[i][j] = Integer.toString((int) cell.getNumericCellValue());
				case BOOLEAN:
					data[i][j] = cell.getBooleanCellValue();
				default:
					break;
				}
			}
		}
		return data;
	}

	public static String captureScreenshot(WebDriver driver, String testname) {

		File srcScreenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		String destinationScreenshotPath = System.getProperty("user.dir") + "\\screenshots\\" + testname + ".png";

		try {
			FileHandler.copy(srcScreenshot, new File(destinationScreenshotPath));
		} catch (IOException e) {
			e.printStackTrace();
		}
		return destinationScreenshotPath;
	}

	public static String getStringNumberForCurrentTime() {

		LocalDateTime now = LocalDateTime.now();
		Integer month = now.getMonthValue();
		Integer day = now.getDayOfMonth();
		Integer hour = now.getHour();
		Integer minute = now.getMinute();
		Integer second = now.getSecond();
		String stringNumberForCurrentTime = day.toString() + month.toString() + hour.toString() + minute.toString()
				+ second.toString();

		return stringNumberForCurrentTime;
	}

	public static String getAutoGeneratedEmailId(String name) {

		String autoGeneratedEmailID = name + "+" + getStringNumberForCurrentTime() + "@gmail.com";
		return autoGeneratedEmailID;
	}

}
